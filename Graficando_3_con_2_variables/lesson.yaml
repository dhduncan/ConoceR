- Class: meta
  Course: ConoceR
  Lesson: Graficando_3_con_2_variables
  Author: David H. Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.3.1

- Class: text
  Output: "¡Hola! Bienvenid@ a esta tercer lección de graficar. Usted va a 
  hacer más gráficas con pares de variables en esta lección."
  
- Class: text
  Output: "Espero que se siente cada vez más cómod@ con el uso de R, y que ya 
  tiene su álbum de recortes creciendo con ejemplos de código útil para 
  realizar sus propias presentaciones. Muy pronto, usted tiene que presentar 
  una obra propia a sus compañeros como tarea de calificación."
  
- Class: figure
  Output: "Antes de empezar, quería enseñarle una característica de R que no
  he mencionado todavía. En la última lección usted utilizara unos argumentos
  a la función par() para cambiar las dimensiones de las margenes externas para
  acomodar los nombres de las provincias de El Ecuador.  Acabara de aparecer una
  imagen de cuatro gráficas en la ventanilla PLOTS que demuestra el uso de un
  argumento que divide el espacio en filas y columnas para acomodar gráficas
  múltiples."
  Figure: mfrow.R
  FigureType: new

- Class:  cmd_question
  Output: "El argumento que utilicé fue mfrow() lo cual es otro argumento muy
  útil de par(). No tengo ni idea porque el argumento se denominó mfrow, pero,
  por si a caso que le ayude recordarlo, digamos que es una sigla para Matriz 
  de  Figuras por ROWs (filas). En el indicador (>) teclée par(mfrow = c(2,2)).
  Se lo explico en seguida."
  CorrectAnswer: par(mfrow = c(2,2))
  AnswerTests: omnitest(correctExpr="par(mfrow = c(2,2))")
  Hint: "Teclée par(mfrow = c(2,2)), y en el próximo diálogo se lo explicaré."

- Class: text
  Output: "La instrucción que usted acaba de darle a R es que divida
  el espacio de una salida grafica en partes iguales; la parte 'c(2, 2)' 
  especifica el numero de filas (2), luego el numero de columnas (2) (pudieran
  haber sido otros valores, y se podría volver el adjuste a 'c(1,1)' para
  que R imprima una gráfica en la ventanilla entera.
  La parte del argumento ROW (fila) refleja que R va a llenar este espacio por 
  filas, empezando con el espacio superior a la izquierda. Existe un argumento
  muy parecido mfcol() que llenara los espacios por columnas. Sin embargo, 
  puesto que usted controla el orden de realizar las graficas, no importa tanto
  cual escoge usted. Yo siempre uso mfrow()."
  
- Class: cmd_question
  Output: "Muy bien, ahora, usted va a reproducir la imagen de las cuatro
  gráficas. Ya usted estableció el espacio con mfrow(), necesita generar unos
  datos. Escriba k <- rnorm(20) para crear un objeto k que tomara 20 números
  aleatorios de una distribución normal (simétrica, con media 0)."
  CorrectAnswer: k <- rnorm(20)
  AnswerTests: omnitest(correctExpr="k <- rnorm(20)")
  Hint: "Usted necesita este objeto para dar las siguientes instrucciones a R.
  Teclée k <- rnorm(20) para continuar."

- Class: cmd_question
  Output: "Eche un vistazo a los datos antes de graficarlos por teclear 'k', el
  nombre del objeto."
  CorrectAnswer: k
  AnswerTests: omnitest(correctExpr="k")
  Hint: "Siempre es una buena práctica visualizar los datos antes de graficar,
  así que ingrese k y presione INTRO."

- Class: cmd_question
  Output: "Volvemos a su gráfica pues. Haga la primera gráfica, la cual va a 
  aparecer en la parte superior a la izquierda, por ingresar este comando 
  plot(k, type = 'p').  De hecho, type = 'p' es la condición base del argumento
  type (tipo) pero usted va a declararlo para ver la comparación con lo que 
  sigue. Dese la oportunidad ahora."
  CorrectAnswer: plot(k, type = 'p')
  AnswerTests: omnitest(correctExpr= "plot(k, type = 'p')")
  Hint: "Escriba plot(k, type = 'p') y pulse INTRO para continuar."

- Class: mult_question
  Output: "Acuérdese que el comando para dividir el espacio era mfrow, y esto
  impliclara una secuencia particular de llenar el espacio. ¿Dónde se espera
  que aparecerá la siguiente gráfica entonces?"
  AnswerChoices: "A la derecha de la que ya esta; Por debajo de la que ya esta; En la posición diagonal, por abajo a la derecha"
  CorrectAnswer: A la derecha de la que ya esta
  AnswerTests: omnitest(correctVal="A la derecha de la que ya esta")
  Hint: "mfrow() va a llenar los espacios por filas (rows en inglés), así se
  espera que la próxima aparezca a la derecha de la gráfica previa."

- Class: cmd_question
  Output: "Ya verá usted. Escriba plot(k, type = 'l') para realizar la siguiente
  gráfica. Fíjese que el comando es lo mismo que usted realizó para la última
  gráfica, a parte del cambio de la 'p' de puntos para la 'l' de linea."
  CorrectAnswer: plot(k, type = 'l')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'l')")
  Hint: "Este comando hará la gráfica de los mismos datos, pero ahora con  una
  linea."

- Class: cmd_question
  Output: "Ahora la tercera. Tome nota que con esta sería de gráficas usa usted
  el mismo conjunto de 20 valores, solo está cambiando la instrucción a R sobre
  el tipo de gráfica. La siguiente es con 'b' para both, o amBos tipos, puntos
  y lineas juntos. Teclée plot(k, type = 'b')."
  CorrectAnswer: plot(k, type = 'b')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'b')")
  Hint: "¿Se equivocó en teclear plot(k, type = 'b')? Inténtelo otra vez."

- Class: cmd_question
  Output: "Por la última gráfica de este juego, teclée plot(k, type = 'h'). Esta
  produce una gráfica tipo histograma (aunque hay valores negativos que no se 
  esperaría de una histograma clásica) que toma el valor 0 como referencia de 
  donde las lineas salen hacia los destinos de cada valor del objeto k. Tal vez
  mi explicación tendrá mas sentido cuando la hayas visto. Dese la oportunidad
  como el susodicho comando plot(k, type = 'h')."
  CorrectAnswer: plot(k, type = 'h')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'h')")
  Hint: "Esta es la última gráfica de esta imagen, teclée plot(k, type = 'h') y 
  presione INTRO para continuar."

- Class: text
  Output: "A mi la función plot() me parece muy flexible. Creo que la impressión
  distinta de cada gráfica destaca la importancia de pensar en cuales
  objetos se escoge para gráficar un conjunto de valores. El cambio de puntos
  para la linea inmediatamente da un sentido de dirección y significado a la
  nube de valores, pero precisamente por eso no es necesariamente una buena
  opción, si dirección no hay en los datos en sí. De igual manera, la última
  gráfica en el estilo de histograma afecta un cambio algo radical a la gráfica
  en que sugiere que el valor 0 es una referencia muy importante."

- Class: cmd_question
  Output: "Es importante darse cuenta que cambios a la función par() permanecen
  en la sesión. Por ejemplo, nuevos gráficas aparecieran según esta misma
  secuencia de arriba y izquierda, luego arriba derecho, luego abajo y izquierda,
  etcétera. Para reinicar todos los ajustes de la función par a sus condiciones
  de base, se puede teclear dev.off(). Este comando quiere decir algo como 
  'apague el dispositivo gráfico'. El dispositivo, tanto como los ajustes, se 
  refresca al recibir una nueva instrucción para graficar. Dese la oportunidad
  ahora, teclée dev.off()."
  CorrectAnswer: dev.off()
  AnswerTests: omnitest(correctExpr="dev.off()")
  Hint: "dev.off() - lo que significa 'device off' - es lo que usted tiene que 
  teclear para seguir con la lecciòn."

  
  
