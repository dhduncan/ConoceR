- Class: meta
  Course: ConoceR
  Lesson: Graficando_3_con_2_variables
  Author: David H. Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.3.1

- Class: text
  Output: "¡Hola! Bienvenid@ a esta tercera lección sobre cómo graficar. En esta
  lección va a aprender cómo hacer gráficas con pares de variables."
  
- Class: text
  Output: "Espero que se sienta cada vez más cómod@ con el uso de R, y que su 
  álbum de recortes vaya creciendo con ejemplos de código útil para 
  realizar sus propias presentaciones. Muy pronto tendrá que presentar 
  una obra propia a sus compañeros como tarea de calificación."
  
- Class: figure
  Output: "Antes de empezar, quería enseñarle una característica de R que no
  le he comentado todavía. En la última lección utilizamos unos argumentos
  de la función par() para cambiar las dimensiones de los márgenes externos para
  acomodar los nombres de las provincias del Ecuador. Acaba de aparecer una
  imagen de cuatro gráficas en la ventanilla PLOTS que muestra el uso de un
  argumento que divide el espacio en filas y columnas para acomodar múltiples
  gráficas."
  Figure: mfrow.R
  FigureType: new

- Class:  cmd_question
  Output: "El argumento que utilicé fue mfrow(), que es otro argumento muy
  útil de la función par(). No tengo ni idea de por qué el argumento se denomina 
  mfrow, pero por si acaso le ayuda a recordarlo, digamos que es una sigla para Matriz 
  de Figuras por ROWs (filas). En el indicador (>) teclee par(mfrow = c(2,2)).
  Se lo explico en seguida."
  CorrectAnswer: par(mfrow = c(2,2))
  AnswerTests: omnitest(correctExpr="par(mfrow = c(2,2))")
  Hint: "Teclee par(mfrow = c(2,2)), y en el próximo diálogo se lo explicaré."

- Class: text
  Output: "La instrucción que acaba de darle a R es que divida
  el espacio de una salida gráfica en partes iguales; la parte 'c(2, 2)' 
  especifica el número de filas (2), luego el número de columnas (2) (podrían
  haber sido otros valores, y se podría volver el ajuste a 'c(1,1)' para
  que R imprima una gráfica en la ventanilla entera).
  La parte del argumento ROW (fila) refleja que R va a llenar este espacio por 
  filas, empezando con el espacio superior izquierdo. Existe un argumento
  muy parecido mfcol() que llenaría los espacios por columnas. Sin embargo, 
  puesto que usted controla el orden de realizar las gráficas, no importa tanto
  cuál escoja. Yo siempre uso mfrow()."
  
- Class: cmd_question
  Output: "Muy bien, ahora va a tener que reproducir la imagen de las cuatro
  gráficas. Ya estableció el espacio con mfrow(), necesita generar unos
  datos. Escriba k <- rnorm(20) para crear un objeto k que tomará 20 números
  aleatorios de una distribución normal (simétrica, con media 0)."
  CorrectAnswer: k <- rnorm(20)
  AnswerTests: omnitest(correctExpr="k <- rnorm(20)")
  Hint: "Necesita este objeto para dar las siguientes instrucciones a R.
  Teclee k <- rnorm(20) para continuar."

- Class: cmd_question
  Output: "Eche un vistazo a los datos antes de graficarlos tecleando 'k', el
  nombre del objeto."
  CorrectAnswer: k
  AnswerTests: omnitest(correctExpr="k")
  Hint: "Siempre es una buena práctica visualizar los datos antes de graficarlos,
  así que ingrese k y presione INTRO."

- Class: cmd_question
  Output: "Haga la primera gráfica, que aparecerá en la parte superior
  izquierda, ingresando este comando plot(k, type = 'p').
  De hecho, type = 'p' es la condición base del argumento
  type (tipo) pero lo va a escribir para ver la comparación con lo que 
  sigue. Inténtelo ahora."
  CorrectAnswer: plot(k, type = 'p')
  AnswerTests: omnitest(correctExpr= "plot(k, type = 'p')")
  Hint: "Escriba plot(k, type = 'p') y pulse INTRO para continuar."

- Class: mult_question
  Output: "Recuerde que el comando para dividir el espacio era mfrow, y esto
  implicaba una secuencia particular de llenado del espacio. ¿Dónde espera
  entonces que aparezca la siguiente gráfica?"
  AnswerChoices: "A la derecha de la que ya está; Debajo de la que ya está; En la diagonal, abajo a la derecha"
  CorrectAnswer: A la derecha de la que ya está
  AnswerTests: omnitest(correctVal="A la derecha de la que ya está")
  Hint: "mfrow() va a llenar los espacios por filas (rows en inglés), así que se
  espera que la próxima gráfica aparezca a la derecha de la gráfica previa."

- Class: cmd_question
  Output: "Ya verá. Escriba plot(k, type = 'l') para realizar la siguiente
  gráfica. Fíjese que el comando es el mismo que ya utilizó para realizar la última
  gráfica, aparte del cambio de la 'p' de puntos para la 'l' de línea."
  CorrectAnswer: plot(k, type = 'l')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'l')")
  Hint: "Este comando hará una gráfica con los mismos datos, pero ahora usando una
  línea."

- Class: cmd_question
  Output: "Ahora la tercera. Tome nota que con esta serie de gráficas estamos usando
  siempre el mismo conjunto de 20 valores. Lo único que estamos cambiando es la instrucción 
  sobre el tipo de gráfica. La siguiente será con 'b' para both, es decir, para que use tanto 
  puntos como líneas juntos. Teclee plot(k, type = 'b')."
  CorrectAnswer: plot(k, type = 'b')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'b')")
  Hint: "¿Se equivocó en teclear plot(k, type = 'b')? Inténtelo otra vez."

- Class: cmd_question
  Output: "Para la última gráfica de este juego, teclee plot(k, type = 'h'). Esto
  produce una gráfica tipo histograma (aunque hay valores negativos que no se 
  esperaría en un histograma clásico) que toma el valor 0 como referencia para que desde 
  ahí salgan las líneas hacia los destinos de cada valor del objeto k. Tal vez
  mi explicación tenga más sentido cuando la haya visto. Inténtelo utilizando
  el susodicho comando plot(k, type = 'h')."
  CorrectAnswer: plot(k, type = 'h')
  AnswerTests: omnitest(correctExpr="plot(k, type = 'h')")
  Hint: "Esta es la última gráfica de esta imagen, teclee plot(k, type = 'h') y 
  presione INTRO para continuar."

- Class: text
  Output: "A mí la función plot() me parece muy flexible. Creo que la impresión
  de distintos tipos de gráfica destaca la importancia de pensar en qué
  objetos se escogen para gráficar un conjunto de valores. El cambio de puntos
  por una línea inmediatamente da un sentido de dirección y significado a la
  nube de valores, pero precisamente por eso no es necesariamente una buena
  opción si no hay dirección en los datos en sí. De igual manera, la última
  gráfica tipo histograma produce un cambio algo radical a la gráfica que
  sugiere que el valor 0 es una referencia muy importante."

- Class: cmd_question
  Output: "Es importante darse cuenta de que los cambios que se realizan a la 
  función par() permanecen en la sesión. Por ejemplo, si hacemos nuevas gráficas,
  aparecerán siguiendo esta misma secuencia, primero arriba a la izquierda, luego arriba 
  a la derecha, luego abajo a la izquierda, etc. Para devolver todos los ajustes de la 
  función par a sus condiciones iniciales, se puede teclear dev.off(). Este comando quiere 
  decir algo así como 'apague el dispositivo gráfico'. El dispositivo, así como los ajustes, se 
  actualiza al recibir una nueva instrucción para graficar. Inténtelo ahora,
  teclée dev.off()."
  CorrectAnswer: dev.off()
  AnswerTests: omnitest(correctExpr="dev.off()")
  Hint: "dev.off() - lo que significa 'device off' - es lo que usted tiene que 
  teclear para seguir con la lección."

- Class: text
  Output: "Si quiere revisar el estado de los ajustes de par() en algún momento,
  puede teclear par() no más, con los paréntesis vacíos. Esto imprime una lista de
  los ajustes que se han aplicado a cada argumento que acepta la función par. Cabe 
  señalar que hay argumentos que controlan detalles dentro de par, pero su uso 
  no es muy común. Para leer lo que hace cada argumento, se puede teclear ?par
  en el indicador sin paréntesis. Pero ahora, debemos seguir con las gráficas
  de dos variables."

- Class: text
  Output: "Como ya sabe, existen miles de opciones para hacer una gráfica. 
  En esta lección, igual que en las lecciones anteriores, le voy a enseñar 
  una nueva opción por acá, y más en el vídeo. Si quieren, podemos conversar sobre 
  distintas opciones para graficar ejemplos propios que tengan
  ustedes en el curso. Todo depende de su propósito o la idea que quieran 
  probar con una gráfica o presentación. Sin un propósito claro, se puede 
  jugar y tal vez surja algo lindo, pero siempre es más fácil adelantarse 
  cuando tenga un propósito concreto."

- Class: cmd_question
  Output: "De hecho, usted ya hizo una gráfica de dos variables cuando construyó
  el diagrama de cajas con los datos del número de hijos e hijas que tiene la
  mujer promedio en cada provincia del Ecuador, organizados por nivel de 
  alfabetización. Seguimos con ese conjunto de datos, que debería haberse cargado
  en R cuando lanzó la lección actual. Para ubicarse, reproduzca 
  la gráfica del número de hijos e hijas en función del grado de alfabetización con 
  este comando boxplot(detalle$hijos ~ detalle$leer.escr)."
  CorrectAnswer: boxplot(detalle$hijos ~ detalle$leer.escr)
  AnswerTests: omnitest(correctExpr="boxplot(detalle$hijos ~ detalle$leer.escr)")
  Hint: "Aunque faltan los elementos obligatorios de títulos y etiquetas 
  informativas, de momento basta con teclear boxplot(detalle$hijos ~ detalle$leer.escr)."
  
- Class: mult_question
  Output: "Espere, ¿esta gráfica es la misma que usted hizo unas lecciones atrás,
  o no?"
  AnswerChoices: "No; Si"
  CorrectAnswer: No
  AnswerTests: omnitest(correctVal="No")
  Hint: "Esta gráfica tiene las mismas dos cajas que usted vio hace unas 
  lecciones, pero también tiene una caja a la izquierda 'juntos' que resume el 
  promedio global para cada provincia del país."

- Class: text
  Output: "La diferencia no es en el código o comandos para la gráfica, sino en
  el conjunto de datos. En este caso tenemos categorías adicionales, etiquetadas como
  'juntos', que nos proporcionan resúmenes. En esta gráfica vemos un resumen, y 
  una subdivisión por alfabetización. Pero hay más aún en estos datos."
  
- Class: cmd_question
  Output: "Para revelar información más detallada, teclee el siguiente 
  'with(detalle, boxplot(hijos~area*leer.escr))'. No se asuste de la
  introducción de 'with( , )', es un formato alternativo para evitar el uso del
  nombre del conjunto y el $ (detalle$). Escriba ahora lo de arriba para visulaizar 
  este paso."
  CorrectAnswer: with(detalle, boxplot(hijos~area*leer.escr))
  AnswerTests: omnitest(correctExpr="with(detalle, boxplot(hijos~area*leer.escr))")
  Hint: "Escribí el comando de arriba entre comillas para señalar que el argumento
  with() estaba incluido, pero ahora no debe ingresarlas acá en el indicador. Teclee
  with(detalle, boxplot(hijos~area*leer.escr)) no más."
  
- Class: cmd_question
  Output: "Pffff, ¿qué tenemos acá? Pues, hagamos una cosa, le sugiero un cambio
  que le va a ayudar a entender el contenido y luego me va a proponer junto con los 
  compañeros en el espacio de foro, unas mejoras para esta gráfica. 
  Gire las etiquetas del eje X ingresando las=2, después de una coma,
  antes de los dos paréntesis de cierre al final del comando que utilizó 
  para realizar la gráfica actual. Recupere ese comando e ingrese el cambio 
  mencionado."
  CorrectAnswer: with(detalle, boxplot(hijos~area*leer.escr, las = 2))
  AnswerTests: omnitest(correctExpr="with(detalle, boxplot(hijos~area*leer.escr, las=2))")
  Hint: "El comando debe terminar así with(detalle, boxplot(hijos~area*leer.escr, las = 2))."

- Class: text
  Output: "Voy a explicarle la sintaxis del comando. Con ello pedimos 
  los datos de 'hijos', la variable dependiente, dividido por las combinaciones de 'area'
  (urbana, rural, y juntos (combinados)) y 'leer.escr' (SI sabe, NO sabe, y 
  juntos (combinados)). El asterisco o símbolo de multiplicación * es lo que
  indica a R que debe graficar las combinaciones de area por leer.escr."

- Class: mult_question
  Output: "¿Ya tiene claro qué quieren decir las etiquetas provisionales que 
  ha puesto el programa según el código? Tenemos datos de los promedios por 
  las provincias de todo el páis etiquetados como 'juntos.juntos'. Luego dos
  cajas que contienen respectivamente los promedios de cada provincia según 
  pertenezcan a áreas urbanas o rurales. Luego, tres gráficas para las partes de 
  la muestra que indican si sabían leer y escribir, o si no sabían. Para
  probar si me explico, déjeme preguntarle algo específico. Escoja la interpretación
  de entre las siguientes que NO sea correcta."
  AnswerChoices: "Algunas cajas tienen varios valores por provincia según el contexto; Cada caja se elaboró con un valor para cada provincia; Cada valor promedio que compone cada caja representa más o menos mujeres según el contexto"
  CorrectAnswer: Algunas cajas tienen varios valores por provincia según el contexto
  AnswerTests: omnitest(correctVal="Algunas cajas tienen varios valores por provincia según el contexto")
  Hint: "Solo hay un valor por provincia en cada caja, aunque el número de
  mujeres a que representa ese punto cambia según el contexto."

- Class: text
  Output: "Al pensar en cómo se podría mejorar la gráfica, no debe limitarse a 
  los cambios que ya sabe realizar, sino que puede sugerir cualquier idea que
  se le ocurra. Podría jugar con las posibilidades directamente en R, o
  podría empezar dibujando un croquis con un lápiz y una hoja de papel, como 
  suelo hacer yo. ¿Tal vez sería mejor en gráficas aparte?"

- Class: text
  Output: "Pues, dejamos esta lección acá, depués de un paso más en un análisis
  exploratorio de este conjunto de datos interesantes del Ecuador. Tengo ganas
  de ver sus propios experimentos con gráficas y presentaciones, ¡y en el próximo
  módulo ya tendrán la gran oportunidad de mostrar un poco de sus propios
  talentos y gustos!"

- Class: text
  Output: "Hasta la próxima vez que nos veamos en línea, le deseo mucho éxito en
  todas las labores académicas."
