- Class: meta
  Course: ConoceR
  Lesson: LosToquesFinos_Color
  Author: David H Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.2.21

- Class: text
  Output: "Bienvenidos a esta nueva sesión. En esta ocasión exploraremos las
  opciones de color en el sistema básico para graficar en R. Cuando digo en R, 
  espero que esté trabajando en RStudio siempre durante este curso."

- Class: text
  Output: "Ya que va conociendo R, no le sorprenderá que haya muchas maneras
  de trabajar con color, e incluso que haya paquetes con paletas de color alternativas.
  En esta sesión nos quedaremos con las básicas."

- Class: cmd_question
  Output: "R tiene 657 colores identificados, y se les puede llamar por su nombre,
  o bien utilizar codificaciones de color como la hexadecimal o los valores RGB. Para ver la 
  lista de colores, teclee colors(). Pruébelo ahora."
  CorrectAnswer: colors()
  AnswerTests: omnitest(correctExpr="colors()")
  Hint: "Tecléelo, no le va a doler."

- Class: figure
  Output: "En la ventanilla de PLOTS debe haber aparecido, o empezado a aparecer,
  una representacíon de los 657 colores ordenados por tonalidad, saturación, y 
  valor."
  Figure: StowersColor.R
  FigureType: new

- Class: text
  Output: "Esta tabla se cita mucho en las fuentes en lónea de R. Puede
  consultarla, así como otras configuraciones útiles, en esta página 
  http://research.stowers-institute.org/efg/R/Color/Chart/index.htm. Si
  encuentra un recurso semejante en castellano, ¡compártalo con nosotros por el
  foro!"

- Class: cmd_question
  Output: "Muy bien, ¿pero cómo le va a ayudar esto? Pues, con el código numérico
  que se ve en la tabla de colores, se puede averiguar el nombre del color que está 
  usando en sus gráficas. A mí me llama la atención el color número 642, así que vamos a 
  conocerlo. Ya hemos visto que el objeto que almacena los colores se llama colors(),
  ¿verdad? Pues vamos a especificar en este comando el número del color que 
  queremos destacar entre corchetes [], así colors()[642]. Inténtelo."
  CorrectAnswer: colors()[642]
  AnswerTests: omnitest(correctExpr='colors()[642]')
  Hint: "Aunque le parezca un poco torpe, este comando pide el color con índice
  642 de entre todos los colores posibles."

- Class: text_question
  Output: "¿Como se llama ese color entonces? Escriba el nombre en inglés que
  haya aparecido en la consola, sin las comillas."
  CorrectAnswer: violetred1
  AnswerTests: omnitest(correctVal='violetred1')
  Hint: "Teclee el nombre del color no más para poder avanzar."

- Class: text
  Output: "OK, ahora vamos a llamar a este color para reconstruir la gráfica que vimos
  en el vídeo de las opiniones de la gente de Bogotá sobre sus vidas. Las
  primeras cifras de la gráfica superior representaban el porcentaje de personas que
  creían que su nivel de vida había mejorado en los 5 últimos años, y fueron 51 % en 2011 
  y 54.2% en 2014."

- Class: cmd_question
  Output: "En primer lugar, con el color que sale por defecto,
  proporcione los siguientes argumentos a la función barplot(). Primero
  tiene que especificar la altura (height) de las barras así height=c(51, 54.2),
  y luego un argumento para los nombres (etiquetas) de las barras, así
  names.arg=c('2011', '2014'). Incluya los dos argumentos en la función
  barplot(), seperados por una coma, para empezar."
  CorrectAnswer: barplot(height = c(51, 54.2), names.arg = c('2011', '2014'))
  AnswerTests: omnitest(correctExpr="barplot(height = c(51, 54.2), names.arg = c('2011', '2014'))")
  Hint: "Lo que necesitaba era barplot(height = c(51, 54.2), names.arg = c('2011', '2014'))" 

- Class: cmd_question
  Output: "Ahora vamos a añadir ese color 'violetred1'. Como hicieron los miembros de la 
  oficina del alcalde de Bogotá, queremos que llame la atención 2014, así que dejaremos
  2011 en gris. Recupere el comando anterior y después de una coma, modifique la
  llamada a barplot() con lo siguiente col = c('grey', 'violetred1')"
  CorrectAnswer: barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey', 'violetred1'))
  AnswerTests: omnitest(correctExpr="barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey', 'violetred1'))")
  Hint: "Puesto que añadió lo del color, la función debería haber salido así
  barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey', 'violetred1'))"

- Class: cmd_question
  Output: "Ahora podríamos reproducir el efecto del corte del eje que 
  hicieron los miembros de la oficina del alcalde. ¿Se acuerda qué tan fuerte parecía 
  la diferencia entre 2011 y 2014 en su gráfica? Esto se hace añadiendo otro
  argumento ylim = c(49, 55) - ya que estos fueron los límites de su versión
  de la gráfica, pero también tenemos que ingresar otro argumento xpd=FALSE. 
  Inténtelo, recupere el último comando otra vez y añádale los dos
  argumentos mencionados."
  CorrectAnswer: barplot(height = c(51, 54.2), names.arg = c("2011", "2014"), col = c("grey", "violetred1"), ylim = c(49,55), xpd = FALSE)
  AnswerTests: omnitest(correctExpr='barplot(height = c(51, 54.2), names.arg = c("2011", "2014"), col = c("grey", "violetred1"), ylim = c(49,55), xpd = FALSE)')
  Hint: "Ahora la función es así barplot(height = c(51, 54.2), 
  names.arg = c('2011', '2014'), col = c('grey', 'violetred1'), ylim = c(49,55), xpd = FALSE)"

- Class: cmd_question
  Output: "¡Vaya cambiazo!, ¿verdad? Esta versión es más llamativa, pero no es
  una buena práctica, así que vamos a quitar los últimos dos argumentos con los 
  que cambiamos el eje Y. Lo que sí debemos introducir en el comando son las
  etiquetas para los ejes. En este paso debe quitar los argumentos ylim y xpd,
  y en su lugar añadir ylab='Porcentaje de encuestados' y xlab = 'Año de la encuesta'."
  CorrectAnswer: barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey', 'violetred1'), ylab='Porcentaje de encuestados', xlab='Año de la encuesta')
  AnswerTests: omnitest(correctExpr="barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey', 'violetred1'), ylab='Porcentaje de encuestados', xlab='Año de la encuesta')")
  Hint: "Después de los cambios en este paso, la función debe quedar así
  barplot(height = c(51, 54.2), names.arg = c('2011', '2014'), col = c('grey',
  'violetred1'), ylab='Porcentaje de encuestados', xlab='Año de la encuesta')"

- Class: text
  Output: "Bueno, le desvié un poco con esto de la escala del eje Y, regresemos
  al tema de color. A propósito, para destacar diferencias
  pequeñas como vemos en este ejemplo, hay que seleccionar un gráfico de puntos."

- Class: cmd_question
  Output: "De hecho, hay una manera aún más sencilla para introducir un juego
  limitado de colores dentro de las gráficas. R tiene una paleta de 8 colores que
  se puede llamar por el número. Usted los debe haber visto en el vídeo en la 
  gráfica mía bien fea. Se los puede ver tecleando lo siguiente 
  barplot(1:8, col=1:8)."
  CorrectAnswer: barplot(1:8, col=1:8)
  AnswerTests: omnitest(correctExpr='barplot(1:8, col=1:8)')
  Hint: hint

- Class: text
  Output: "A propósito, algunos de los expertos en visualización opinan
  diferente acerca de la cuestión sobre qué color es más fiable cuando hay que añadir
  color para destacar algo. En sus libros Edward Tufte propone rojo, pero ayer
  vi un autor opinando que para pantallas y fuentes de Internet, la mejor opción
  suele ser azul. Yo no tengo opiniones fuertes en este asunto, aunque supongo que
  en mi práctica voy con rojo. Para usar el rojo se usa col=2, y para el azul col=4."

- Class: text
  Output: "Ojo - estos números no tienen nada que ver con los
  índices de los colores en la tabla completa de colores que usted vio antes.
  Por ejemplo el índice para blanco en la tabla completa era 1, así que lo llamaría
  usando col=colors()[1], mientras que el 1 en esta serie limitada de 8 colores llama al 
  color negro y con la sintaxis col=1."

- Class: cmd_question
  Output: "Una aplicación súper útil en R es asignar el color usando una variable de
  agrupación o factor. Hemos cargado en R un conjunto de datos 'detalle' que contiene los
  datos del número promedio de hijos e hijas que tenían las ecuatorianas según
  el censo de 2010. Confirme que este objeto está vigente en la sesión con head(detalle)."
  CorrectAnswer: head(detalle)
  AnswerTests: omnitest(correctExpr='head(detalle)')
  Hint: "Este paso siempre es una buena idea para recordar cómo era un objeto de 
  datos. Escriba head(detalle) y presione INTRO."

- Class: cmd_question
  Output: "En este paso vamos a graficar todos los valores que hay en el conjunto de datos,
  pero especificando que el color siga la variable área. Esta variable tiene en
  cuenta si la encuestada pertencía a una zona urbana o rural. Se hace así
  with(detalle, plot(hijos, col = area)). Inténtelo."
  CorrectAnswer: with(detalle, plot(hijos, col = area))
  AnswerTests: omnitest(correctExpr='with(detalle, plot(hijos, col = area))')
  Hint: "No hay trucos acá, escriba with(detalle, plot(hijos, col = area)) para
  ver los puntos pintados según la variable área."

- Class: text
  Output: "Para entender esta vista de los datos, hay que acordarse de que en este
  conjunto tenemos datos promedio por cada provinicia del Ecuador, y luego 
  desglosados por nivel de alfabetización y por zona, rural o urbana."

- Class: cmd_question
  Output: "¿Le parece si añadimos unas anotaciones a esta gráfica? Empecemos
  con unas palabras. Todas las gráficas, y por lo tanto todo lo que podemos añadir 
  como anotaciones, necesitan información sobre las coordenadas de forma precisa,
  aunque bajo ciertas condiciones esta información puede ser vaga. Añada las palabras ¿cuál color va 
  con cuál nivel de área?. Este texto va entre comillas con el argumento labels=''. 
  También tenemos que especificar un lugar para colocar este texto. Digamos que x sea 150, e y 
  sea 4. Ensamble ahora estos detalles dentro de la función text() en el indicador
  de RStudio."
  CorrectAnswer: text(x=150, y=4, labels='¿cuál color va con cuál nivel de área?')
  AnswerTests: omnitest(correctExpr="text(x=150, y=4, labels='¿cuál color va con cuál nivel de área?')")
  Hint: "Cada vez le exijo más, ¿verdad? Ensámblelo así 
  text(x=150, y=4, labels='¿cuál color va con cuál nivel de área?'), aunque
  el orden de los argumentos dentro de la función no importa."
  
- Class: text
  Output: "Si quiere dividir el texto en dos renglones, hay que ingresar la
  combinación \n en el lugar donde quiera que lo divida. Le sugiero que
  experimente con el resto de opciones de la función text(), las cuales brindan
  un nivel de contro muy fino."

- Class: text
  Output: "Reconocerá que algunas técnicas, como la de añadir texto, 
  podrían hacerse con igual o mayor facilidad en otro programa diferente. Sin 
  embargo, no hace daño aprenderlas en R."

- Class: cmd_question
  Output: "Si ahora quisiera añadir una línea para destacar algún umbral en 
  la gráfica, hay varias opciones. Se puede utilizar la función abline(), cuyo nombre 
  quiere decir trace una línea entre a y b. Imagínese que queremos aislar el
  primer tercio (más o menos) del espacio, donde aparecen las mujeres que no sabían
  leer ni escribir. La función abline() hace más cosas, pero ahora sólo
  queremos pedir que nos añada una línea vertical alrededor del valor 77 en el
  eje X. Teclee abline(v=77), indicando la v para que la línea sea vertical."
  CorrectAnswer: abline(v=77)
  AnswerTests: omnitest(correctExpr='abline(v=77)')
  Hint: "El comando que quiere es abline(v = 77)."

- Class: text
  Output: "Súper sencillo, ¿verdad? Para líneas horizontales haríamos algo muy
  parecido, aunque indicando h en lugar de v."

- Class: cmd_question
  Output: "Para especificar una línea que empiece y termine donde usted quiera,
  utilizamos segments(). Esta función requiere más argumentos, porque tenemos que
  proporcionar las coordenadas en las dimensiones x e y. Sería más fácil de entender
  con un ejemplo. Digamos que quiero trazar una línea que empieza en nuestra
  recta vertical en el valor 77 y va en el plano horizontal hasta 200, para que
  quepan los datos de las alfabetizadas, y los datos para alfabetizadas y no
  alfabetizadas juntas. La voy a hacer más gruesa también con lwd=. La receta 
  es así segments(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2)"
  CorrectAnswer: segments(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2)
  AnswerTests: omnitest(correctExpr='segments(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2)')
  Hint: "Compruebe que tiene los elementos bien escritos, y los argumentos separados
  con comas. El comando es segments(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2)."

- Class: text
  Output: "Ya se habrá dado cuenta de que con esta función puede dibujar una
  línea entre cualquier par de puntos en el espacio que establece el cuadro de la gráfica."

- Class: cmd_question
  Output: "Claro, le he hecho crear un pequeño desastre acá, añadiendo estos
  elementos sin razón. Sin embargo, la idea es que usted aprenda la técnica
  y luego la pueda aplicar en un contexto donde tenga sentido. Seguimos, ¿no?
  Para flechas, los argumentos son parecidos a los de segments, aunque tenemos
  que meter uno más para la forma del punto de la flecha. Pruebe esto
  arrows(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2, length = 0.5)"
  CorrectAnswer: arrows(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2, length = 0.5)
  AnswerTests: omnitest(correctExpr= "arrows(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2, length = 0.5)")
  Hint: "Escriba, o copie y pegue 
  arrows(x0= 77, x1=200, y0 = 3.2, y1 = 3.2, lwd=2, length = 0.5) para avanzar"

- Class: text
  Output: "Lo que ahora necesita más que nada es practicar. Le animo a practicar
  con un espíritu de diversión y aventura. Si no le sale algo, inténtelo de otra
  manera, o escriba en el foro sobre su inconveniente. Con R siempre hay 
  varias maneras de lograr cualquier cosa, y además Internet es una fuente muy rica
  con buenos consejos y ejemplos hechos."

- Class: text
  Output: "Note que muchos de los ejemplos dentro de estas lecciones no llevan los
  elementos imprescindibles de toda gráfica, es decir, las etiquetas para los ejes con 
  unidades de medida, títulos, etcétera. Lo hacemos así para que se centre en lo nuevo de la
  lección, y para que los comandos sean más ligeros. Sin embargo, sus obras 
  siempre deben llevar estos elementos. Pues, seguro que se ha quedado con
  dudas, pero ¡por eso tenemos el foro! Nos vemos allí."
