- Class: meta
  Course: ConoceR
  Lesson: Graficando_1
  Author: David H. Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.3.1

- Class: text
  Output: "¡Muy buenas! En esta leccion Ud importara un conjunto de datos desde
  una hoja de calculo de MS Excel, y realizar varias graficas con ellos. 
  ¿List@?"
  
- Class: text
  Output: "Ud va a cargar datos que ya hubiera visto en la visita a la galería, 
  los que resumen el número de hijos y hijas que tiene las mujeres de las varias
  provincias de El Ecuador. Si quiere explorar el base de datos, desde esta página
  http://www.ecuadorencifras.gob.ec/sistema-integrado-de-consultas-redatam/ se 
  escoge el enlace para el VII Censo de Poblacion y VI de Vivienda 2010."
  
- Class: text
  Output: "Tal vez no se lo enteró pero al comenzar esta lección R hubiera 
  instalado un paquete nuevo 'readxl' en el fondo. El propósito de este paquete
  es aceder a datos almacenados en archivos de MS Excel. Creo que la gran mayoria
  de usuarios de R siguen usando Excel o su equivalente como parte del proceso 
  de ingresar datos, así que paquetes así son super útiles. De hecho, se puede
  importar directamente de un montón de fuentes, hasta páginas web y el 
  portapapeles, aunque no vamos a aprender estas técnicas durante este curso."

- Class: figure
  Output: "Bueno, es la hora de crear un tramo de datos que corresponde a los
  datos. Para que tengas una idea de la estructura antemano, su practica normal
  sería echar un vistazo al archivo mediante un programa tipo Excel o LibreOffice. 
  Esto se haría fuera de R. En este caso grabé una imagen de la hoja, y la acabara
  de aparecer en la ventanilla de PLOTS. Deténgase un ratito para observar la
  estructura. A continuación le presentará una pregunta sobre ella."
  Figure: hojaVista.R
  FigureType: new
  
- Class: exact_question
  Output: "Esta hoja de calculo tiene 'metadatos' (datos sobre los datos), y los 
  datos crudos que nosotros necesitamos. ¿Después de cuantos renglones de 
  meta datos empiecen los datos crudos y sus etiquetas? Escriba el número del 
  renglón cuando empiecen los datos no más."
  CorrectAnswer: 18
  AnswerTests: omnitest(correctVal='18')
  Hint: "Las etiquetas (region, área, sabLyE, y Hijos) que encabezan los datos
  empiezan en el renglón 18, después de las observaciones y notas. Escriba 18 
  entonces."

- Class: text
  Output: "Este hecho es importante porque vamos a utilizar este dato en el 
  siguiente paso para decir a R que debe saltar los primeros 14 renglones de 
  contenido."

- Class: cmd_question
  Output: "Sin retraso más, vamos a asignar a un objeto nuevo 'hijos' los datos 
  del censo mediante la función read_excel(), y teclee 
  hijos <- read_excel(path = path2xlsx, skip = 14). 
  Con esto especificamos dos argumentos, (1) 'path', la dirección al archivo de 
  interés y (2)'skip', cuantos renglones de contenido deben ser saltados antes 
  empezar a leer los datos."
  CorrectAnswer: hijos <- read_excel(path = path2xlsx, skip = 14)
  AnswerTests: omnitest(correctExpr='hijos <- read_excel(path = path2xlsx, skip = 14)')
  Hint: "Acuérdese que R es ultra sensible a minúscula y mayúscula, muchos errores
  surgen debido a cambios no intencionales de ortografía. Escriba, o pega, 
  hijos <- read_excel(path = path2xlsx, skip = 14)."
  
- Class: text
  Output: "Entienda que la función read_excel pertenece al paquete. Fuera de esta 
  lección, usted tendría que cargar el paquete readxl antes de invocar 
  read_excel() paso por teclear library(readxl)."

- Class: cmd_question
  Output: "Antes de nada, hechar un vistazo a la estructura del conjunto en la
  ventanilla ENVIRONMENT, por tocar la flechita azul al lado del nombre del
  objeto 'hijos'. Allí se ve que las 4 variables tienen tipo 'chr'. Usted va a 
  dar R instrucciones nuevos sobre los tipos de estas variables. Primero,
  necesita cambiar la variable 'region' de tipo 'chr' a un factor. Se lo hace
  así  hijos$region <- as.factor(hijos$region). En efecto, la instrucción dice, 
  hijos$region es si mismo, pero se convierta hasta un factor. Al cambiarlo, 
  verá el cambio en la ventanilla ENVIRONMENT."
  CorrectAnswer: hijos$region <- as.factor(hijos$region)
  AnswerTests: omnitest(correctExpr="hijos$region <- as.factor(hijos$region)")
  Hint: "Escriba justamente hijos$region <- as.factor(hijos$region) y véase el
  cambio en la ventanilla ENVIRONMENT. Ahora dice region es un Factor de 26
  niveles."

- Class: cmd_question
  Output: "Repita el último paso, cambiando las referencias a region para area, 
  la variable que marca si el valor pertenece a zonas urbanas o rurales."
  CorrectAnswer: hijos$area <- as.factor(hijos$area)
  AnswerTests: omnitest(correctExpr='hijos$area <- as.factor(hijos$area)')
  Hint: "Ingrese hijos$area <- as.factor(hijos$area) no más."

- Class: cmd_question
  Output: "Ahora con leer.escr también (si las encuestadas supieron leer y
  escribir), haga el mismo cambio."
  CorrectAnswer: hijos$leer.escr <- as.factor(hijos$leer.escr)
  AnswerTests: omnitest(correctExpr='hijos$leer.escr <- as.factor(hijos$leer.escr)')
  Hint: "Ingrese hijos$leer.escr <- as.factor(hijos$leer.escr) no más."

- Class: cmd_question
  Output: "El último cambio de tipo para las variables es para la variable de
  respuesta 'hijos', el número de hijos y hijas que tuvo la encuestada. Esta
  usted tiene que cambiar hasta una variable numérica, como sigue
  hijos$hijos <- as.numeric(hijos$hijos)."
  CorrectAnswer: hijos$hijos <- as.numeric(hijos$hijos)
  AnswerTests: omnitest(correctExpr='hijos$hijos <- as.numeric(hijos$hijos)')
  Hint: "Ingrese hijos$hijos <- as.numeric(hijos$hijos) no más."

- Class: cmd_question
  Output: "En la última lección usted aprendió algunas funciones más para explorar
  un conjunto nuevo de datos como str(), names(), head(), y summary(). Salga un 
  ratito de esta lección actual para familiarizarse con este conjunto hijos. 
  Igual que en cualquier momento de cualquier lección, cuando vea el indicador 
  (>) se puede teclear play() para salir y luego, después de jugar, para volver, 
  nxt()."
  CorrectAnswer: play()
  AnswerTests: omnitest(correctExpr="play()")
  Hint: "Salga un ratito por escribir play(). Luego, despues de experimentar
  con el conjunto se puede continuar desde este punto por teclear nxt() en el 
  indicador()."

- Class: cmd_question
  Output: "¡Está de vuelta! Muy bien, graficamos pues. Tiramos todas
  juntas para esta primera vista. Escriba 
  plot(hijos$hijos, ylab='Número (promedio) de hijos)', xaxt='n')"
  CorrectAnswer: plot(hijos$hijos, ylab='Número (promedio) de hijos)', xaxt='n')
  AnswerTests: omnitest(correctExpr="plot(hijos$hijos, ylab='Número (promedio) de hijos)', xaxt='n')")
  Hint: "Esta primera gráfica es un regalo, solo hay que teclear
  plot(hijos$hijos, ylab='Número (promedio) de hijos)', xaxt='n')."
