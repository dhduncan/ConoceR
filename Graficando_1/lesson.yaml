- Class: meta
  Course: ConoceR
  Lesson: Graficando_1
  Author: David H. Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.3.1

- Class: text
  Output: "¡Muy buenas! En esta leccion Ud importara un conjunto de datos desde
  una hoja de calculo de MS Excel, y realizar varias graficas con ellos. 
  ¿List@?"
  
- Class: text
  Output: "Ud va a cargar datos que ya hubiera visto en la visita a la galería, 
  los que resumen el número de hijos y hijas que tiene las mujeres entre 14 y 50
  años de las varias provincias de El Ecuador. Si quiere explorar el base de 
  datos, desde esta página
  http://www.ecuadorencifras.gob.ec/sistema-integrado-de-consultas-redatam/ se 
  escoge el enlace para el VII Censo de Poblacion y VI de Vivienda 2010."

- Class: cmd_question
  Output: "He creado un objeto denominada 'path2csv1' que contiene la dirección 
  completa para el tramo de datos para que funcione para cada persona sin saber
  donde haya almacenado su directorio del curso. Llame a la función read.csv() 
  con el argumento path = path2csv1 (para dirección al archivo csv), y asígnelo 
  al resultado el nombre 'resumen'."
  CorrectAnswer: resumen <- read.csv(path2csv1)
  AnswerTests: omnitest(correctExpr='resumen <- read.csv(path2csv1)')
  Hint: Almacene a read.csv(path2csv1) en un objeto nuevo con nombe resumen.
  
- Class: text
  Output: "Antes de nada, hechar un vistazo a la estructura del conjunto en la
  ventanilla ENVIRONMENT, por tocar la flechita azul al lado del nombre del
  objeto 'resumen'. Allí se ve que la variable región tiene tipo 'Factor', 
  mientras que la variable hijos es 'num' (para numérica). En este caso, los
  dos son correctos. R suele reconocer el tipo correctamente por defecto."

- Class: cmd_question
  Output: "En la última lección usted aprendió algunas funciones más para explorar
  un conjunto nuevo de datos como str(), names(), head(), y summary(). Ya se ve
  la información de estructura en la ventanilla ENVIRONMENT, pero eche un vistazo
  al resumen de los variables ahora con summary(resumen). Acuérdese que en 
  cualquier momento de cualquier lección, siempre y cuando vea el indicador (>)
  se puede teclear play() para salir y experimentar. Luego, después de jugar, 
  para continuar la lección, se teclea nxt()."
  CorrectAnswer: summary(resumen)
  AnswerTests: omnitest(correctExpr="summary(resumen)")
  Hint: "Escriba summary(resumen)."

- Class: text
  Output: "De esta vista de summary() parece que tenemos un conjunto con un
  valor por Provincia del país con el valor del promedio del número de hijos y
  hijas por mujer en cada una."

- Class: cmd_question
  Output: "Muy bien, graficamos pues. Tiramos todas
  juntas para esta primera vista. Escriba 
  plot(resumen$hijos, ylab='Número de hijos', xaxt='n')"
  CorrectAnswer: plot(resumen$hijos, ylab='Número de hijos', xaxt='n')
  AnswerTests: omnitest(correctExpr="plot(resumen$hijos, ylab='Número de hijos', xaxt='n')")
  Hint: "Esta primera gráfica es un regalo, solo hay que teclear
  plot(resumen$hijos, ylab='Número de hijos', xaxt='n')."

- Class: mult_question
  Output: "Ya con esta gráfica vemos la dispersión de los promedios del número
  de hijos y hijas por mujer. Según la gráfica ¿aproximadamente qué es el rango
  de los valores?"
  AnswerChoices: "1.6-2.6; 1.6-2.5; 1-3; no se lo puede estimar"
  CorrectAnswer: 1.6-2.6
  AnswerTests: omnitest(correctVal= "1.6-2.6")
  Hint: "El valor más bajo es a eso de los 1.6 y el mayor alrededor de 2.6, así
  que por promedio, hay un rango de un hijo atravesar de las provincias del 
  país. De hecho, también usted hubiera visto este dato por el resumen ofrecido
  de summary(resumen) antes."

- Class: text
  Output: "Una gráfica sencilla de puntos mediante plot() es un primer paso
  excelente para familiarizarse con los datos. En ella se puede ver si hay
  valores raros o no creibles." 
  
- Class: cmd_question
  Output: "Sin embargo, una gráfica mejor para resumir una sola variable 
  cuantitativa como el número de hijos sea una diagrama de caja, también conocido
  como diagrama de caja y bigote, o boxplot en inglés. La función tomo el nombre
  del inglés, teclee boxplot(resumen$hijos)."
  CorrectAnswer: boxplot(resumen$hijos)
  AnswerTests: omnitest(correctExpr="boxplot(resumen$hijos)")
  Hint: "Acá no hay trucos, escriba boxplot(resumen$hijos) no más. Si 
  usted ve un mensaje de error 'Error in plot.new() figure margins too large',
  significa que necesita arrastrar la ventana de PLOTS para que sea más alta."

- Class: text
  Output: "Un encanto del sistema base de gráficas en R es que es algo parecido
  al modo de trabajar con papel y bolígrafo. Una vez que estemos satisfech@s con la
  base de la gráfica, podemos añadir elementos como títulos, leyendas, y muchos
  elementos más. Pero, justo igual a dibujar con un bolí en papel, no podemos 
  borrar un elemento una vez trazado. Hay que volver a dibujarla, y en esto se
  ve la gran ventajo de un sistema repetible como lo que ofrece R. Ahora, 
  vamos a girar las etiquetas del eje Y para que se lea mejor los valores."

- Class: cmd_question
  Output: "Uno debe esperar pasar por varios borradores de una gráfica, y como
  le explicaba en el último dialogo, es por eso que guardamos código en un 
  archivo. Así se puede volver a repetir al instante. 
  Ahora, para girar los valores del eye Y, la manera más eficaz pueda ser 
  recuperar el último llamada a boxplot(resumen$hijos) con la flecha arriba, y 
  insertar ', las=1' antes del último cierre de paréntesis. 
  Siempre y cuando introducimos un argumento nuevo en una función, hay que 
  separarlo de los de más con una coma. Introduzca el argumento con 'las' 
  ahora..."
  CorrectAnswer: boxplot(resumen$hijos, las=1)
  AnswerTests: omnitest(correctExpr= "boxplot(resumen$hijos, las=1)")
  Hint: "Use la flecha arriba para recuperar el comando que hizo la gráfica y 
  editarlo para que diga boxplot(resumen$hijos, las=1)."

- Class: text
  Output: "¿No se siente inmediatamente más comod@ leyendo el contenido así? 
  Por ejemplo, la pregunta sobre el rango de valores hubiera sido mucho más 
  fácil con la gráfica en esta orientación, ¿verdad?"

- Class: cmd_question
  Output: "Ahora añada una etiqueta para el eje Y. Tiene usted dos opciones. 
  (1) con title(ylab= 'Número de hijos y hijas'), o (2) por recuperar
  el último comando con boxplot y insertar, antes del último cierre de 
  paréntesis ylab='Número de hijos y hijas'."
  CorrectAnswer: boxplot(resumen$hijos, las=1, ylab="Número de hijos y hijas") 
  AnswerTests: any_of_exprs('title(ylab= "Número de hijos y hijas")', 'boxplot(resumen$hijos, las=1, ylab="Número de hijos y hijas")')
  Hint: "Escriba o title(ylab= 'Número de hijos y hijas') o 
  boxplot(resumen$hijos, las=1, ylab='Número de hijos y hijas')."

- Class: mult_question
  Output: "¿Se acuerde en la visita a la galería cuando le expliqué las partes
  de una digrama de cajas? Basicamente, la diagrama divide los datos en cuartos.
  Esto nos permite hacer observaciones sencillas como 'en 75% de todas las 
  provincias de El Ecuador las mujeres por promedio tienen más de N niños.' En
  este caso N sería el primer cuartil o el punto que indica un cuarto de todas
  las observaciones. ¿Cuál de los siguientes valores sería más cercano a N según
  esta gráfica?"
  AnswerChoices: "1.75; 1.95; 2.30; 1.55"
  CorrectAnswer: 1.75
  AnswerTests: omnitest(correctVal= "1.75")
  Hint: "El primer cuarto de valores acaba donde empieza la caja, así que el
  valor más cercano según la gráfica sería 1.75."

- Class: cmd_question
  Output: "Hacemos una modificación que a mi me encanta. Se puede superimponer
  dos gráficas una por encima de otra para comunicar aspectos distintos de los
  datos. A esta diagrama de cajas vamos a añadir un tipo denominado 
  'stripchart', y su función es stripchart(). Usted va a llamar a esta función
  con 6 argumentos. Acá está el código entero, deténgase un ratito observarlos
  stripchart(resumen$hijos, method = 'jitter', jitter = 0.1, add = TRUE, 
  vertical = TRUE, pch=19). Le comento los elementos en seguida."
  CorrectAnswer: stripchart(resumen$hijos, method = 'jitter', jitter = 0.1, add = TRUE, vertical = TRUE, pch=19)
  AnswerTests: omnitest(correctExpr="stripchart(resumen$hijos, method = 'jitter', jitter = 0.1, add = TRUE, vertical = TRUE, pch=19)")
  Hint: "escriba stripchart(resumen$hijos, method = 'jitter', jitter = 0.1, 
  add = TRUE, vertical = TRUE, pch=19)."
  
- Class: text
  Output: "En este último llamada empezamos con el objeto x, lo que era la
  variable resumen$hijos. El segundo argumento 'method' define el método de acomodar 
  los puntos 'jitter'. Jitter no tiene ninguna tradución fácil, pero se puede 
  pensar en agitación causada por inestablidad nerviosa o algo así. El siguiente
  argumento jitter adjuste el grado máximo de desplacimiento horizontal de los
  puntos. Luego, el argumento 'add' (añadir) es imprescindible. Es ello que 
  especifica que los puntos sean por encima de la gráfica actual en lugar de en
  una diagrama nueva. El argumento 'vertical' por defecto es 'FALSE', es decir
  horizontal, así que tuvimos que cambiarlo a 'TRUE'. Por último, el argumento
  'pch' es lo que controla el tipo de punto."

- Class: text
  Output: "No me soprendería si usted esta pensando que todo esto es demasiado
  detallado. Pero, fíjese, con estos dos elementos gráficos elementos juntos se 
  aprovecha del mensaje de resumen que ofrece la caja y bigote, pero a la vez 
  se ve el número de valores y su distribución cruda. En efecto combine lo bueno
  de las dos primeras vistas que hemos visto. Podemos dejar esta gráfica en su
  estado actual, una vez que acabemos de añadir las etiquetas necesarias."

- Class: cmd_question
  Output: "Necesita un título, ¿verdad?. Ponga 
  title(main= 'Promedio del número de hijos y hijas de mujeres ecuatorianas 2010')
  por ejemplo. Fuera del contexto de una lección de swirl, hay opciones para 
  romper el título rompe en dos o más lineas."
  CorrectAnswer: title(main= 'Promedio del número de hijos y hijas de mujeres ecuatorianas 2010')
  AnswerTests: omnitest(correctExpr= "title(main= 'Promedio del número de hijos y hijas de mujeres ecuatorianas 2010')")
  Hint: "Teclee title(main= 'Promedio del número de hijos y hijas de mujeres ecuatorianas 2010')
  no más para titular la presentación."
  
- Class: cmd_question
  Output: "Podríamos declarar nuestra fuente como subtítulo, otra vez con la 
  función title. Trate esto title(sub = 'Fuente > VII Censo de Poblacion y VI de Vivienda 2010')."
  CorrectAnswer: title(sub = 'Fuente > VII Censo de Poblacion y VI de Vivienda 2010')
  AnswerTests: omnitest(correctExpr= "title(sub = 'Fuente > VII Censo de Poblacion y VI de Vivienda 2010')")
  Hint: "Para añadir este texto como subtítulo escriba 
  title(sub = 'Fuente > VII Censo de Poblacion y VI de Vivienda 2010'). El
  símbolo '>' es un poco raro pero los dos puntos interfieren con la 
  programación de lecciones en swirl así no los puedo utilizar acá."

- Class: text
  Output: "Ahora yo diría que usted tiene una gráfica linda en su simplicidad
  que comunica mucho de este conjunto de datos. También provoca muchas preguntas
  más, como ¿cuáles Provincias sobresaltan del conjunto con máximo o mínimo
  promedio de número de niños por mujer?  Preguntas así podemos explorar en la
  siguiente lección através del conjunto de datos deglosados."

- Class: mult_question
  Output: "En la lección actual, solo le queda a usted un momento de reflexión en
  lo que haya aprendido. Según su experiencia, ¿cree usted que se podría haber
  añadido el título, subtítulo, y etiqueta del eje todos a la vez?"
  AnswerChoices: "Si, la función title() tiene argumentos para cada tipo de título o etiqueta; No, solo acepta un argumento a la vez"
  CorrectAnswer: Si, la función title() tiene argumentos para cada tipo de título o etiqueta
  AnswerTests: omnitest(correctVal="Si, la función title() tiene argumentos para cada tipo de título o etiqueta")
  Hint: "Pues, si se puede. Trate de nuevo."
  
- Class: text
  Output: "De hecho, se pudiera haber añadido todos los elementos de título y 
  etiqueta en la llamad original a boxplot(), sin llamar a la función title(). 
  Le animo colocar todos argumentos en una sola llamada en su álbum de recortes.
  Es buena practica romper lineas con INTRO para mantener código fácil de leer
  y editar.  La función stripchart() para superimponer los puntos por encima 
  tendrá que ser una llamada aparte, despues de lo de boxplot()."

- Class: mult_question
  Output: "La mediana marca el valor en la mitad de todos en el conjunto impar, 
  o en el caso de un número par de valores, divide los dos valores centrales. 
  Entonces ¿la mediana del número promedio de hijos y hijas que tuvieron las mujeres 
  ecuatorianas entre 14 - 50 años de edad en 2010 era qué?"
  AnswerChoices: "1.95; 2.10; 2.30"
  CorrectAnswer: 1.95
  AnswerTests: omnitest(correctVal= "1.95")
  Hint: "Por defecto, las diagramas de caja llevan la media en la linea gruesa
  así el estimador más cercano es 1.95."

- Class: text
  Output: "Con eso, usted ha terminado la lección. No se olvide de trasladar
  código que le parece útil a su álbum de recortes.  En esta lección hemos visto
  una manera muy buena de resumir una variable cuantitativa de forma atractiva
  y informativa. En la siguiente usted jugará con opciones para revelar la 
  identidad de las Provincias, y hacer contrastes con factores de agrupación que
  puedan ayudar en explicar los patrones en el número de hijos y hijas entre las
  mujeres ecuatorianas."
  
- Class: text
  Output: "Hasta la proxima lección, tenga usted un buen día."