- Class: meta
  Course: ConoceR
  Lesson: Graficando_2
  Author: David H. Duncan
  Type: Standard
  Organization: Universidad Técnica Particular de Loja
  Version: 2.3.1

- Class: text
  Output: "Hola, bienvenido a esta lección. En esta vamos a desglosar nuestro
  tramo de datos del número de hijos y hijas con diagramas de barras y otros 
  tipos aliados."

- Class: text
  Output: "Dejamos la última lección despues de haber resumido nuestra variable
  del número de hijos y hijas que tuvo una mujer ecuatoriana de promedio en 2010
  por dos tipos de gráfica, o dos y media si cuenta con el stripchart. Estas
  resumenes dejaron las provincias anónimas, y de esta manera pudimos enfocar en
  la variación en los promedios del número de hijos."

- Class: cmd_question
  Output: "Para empezar, podemos realizar una gráfica tipo diagrama de barras
  facilmente por ingresar nuestro objeto resumen$hijos como el argumento 'height'
  a la función barplot(). Despues de ingresar hijos como height, se puedo 
  especificar el argumento 'names.arg = resumen$region'. Acuérdese que siempre
  hay que separar argumentos de funciones con una coma. Dese la oportunidad de
  crear el barplot que le comenté arriba."
  CorrectAnswer: barplot(height = resumen$hijos, names.arg = resumen$region)
  AnswerTests: omnitest(correctExpr="barplot(resumen$hijos, names.arg = resumen$region)")
  Hint: "En la función barplot(), ingrese primero resumen$hijos para el argumento
  height (significa 'altura' de la barra) y resumen$region para el argumento 
  names.arg."

- Class: text_question
  Output: "Hmmm, esta gráfica no se agrada mucho, no se puede leer muchos de los
  nombres de las provincias. ¿Se acuerda Usted como se llama el argumento para 
  girar las etiquetas o valores de los ejes? Es algo irónico que con este tipo
  de gráfica los números del eje Y salieron bueno por defecto mientras que los
  nombres en el eje X no. Bueno, ¿cómo se llama el argumento que necesitamos
  entonces? Escriba las letras no más, sin o  el símbolo = o un valor. !Intente
  contestar!"
  CorrectAnswer: las
  AnswerTests: omnitest(correctVal='las')
  Hint: "El nombre del argumento es 'las', escíbalo sin comillas para seguir."

- Class: text
  Output: "Le comento como funciona este argumento 'las'. Tome nota en el álbum
  de recortes para su propia referencia. Acepta cuatro valores posibles 
  {0, 1, 2, 3}. Por defecto el adjuste es en 0, lo que hace que las etiquetas de
  los ejes corren en paralelo con los ejes. El argumento las = 1 hace que las
  etiquetas salen en el plano horizontal para los dos ejes, como usted vió en 
  lecciones anteriores. En cambio las = 2 arregla que las etiquetas sean 
  perpendiculares a los ejes y por último las = 3 arreglaría las etiquetas
  fueran todas en el plano vertical."

- Class: cmd_question
  Output: "¿Entendido? A ver, recupere usted el comando para el barplot y añada 
  un argumento con las para girar las etiquetas. Queremos que las etiquetas del 
  eje Y no cambien, pero las de el eje X si giraran. Ponga un argumento con las
  que cree vaya a realizar este cambio."
  CorrectAnswer: barplot(resumen$hijos, names.arg = resumen$region, las=2)
  AnswerTests: omnitest(correctExpr="barplot(resumen$hijos, names.arg = resumen$region, las=2)")
  Hint: "Queremos que en cada eje, las etiquetas corren perpendicular al eje,
  así que podemos descartar las opciones 1 y 3. Queremos añadir a la última
  llamada a barplot() que las = 2."

- Class: cmd_question
  Output: "Pues, mejor, pero con etiquetas largas como estos nombres de las
  provincias suele ser mejor girar la gráfica misma. Recupere la última llamada
  y añadir el argumento horiz = TRUE, para que las barras salgan en horizontal."
  CorrectAnswer: barplot(resumen$hijos, names.arg = resumen$region, las=2, horiz = TRUE)
  AnswerTests: omnitest(correctExpr="barplot(resumen$hijos, names.arg = resumen$region, las=2, horiz = TRUE)")
  Hint: "Añada horiz = TRUE despues de una coma al final de la llamada recuperada,
  o se podría teclear de zero barplot(resumen$hijos, names.arg = resumen$region, 
  las=2, horiz = TRUE)."

- Class: cmd_question
  Output: "Eso tampoco funcionó, ¿verdad? Con etiquetas tan largas hay que hacer
  algo más drástico. Vamos a adjustar a las márgenes del espacio de la gráfica
  por teclear el siguiente comando par(mar=c(4, 10, 4, 2)) en el indicador, 
  aparte de la llamada a la gráfica."
  CorrectAnswer: par(mar=c(4, 10, 4, 2))
  AnswerTests: omnitest(correctExpr="par(mar=c(4, 10, 4, 2))")
  Hint: "Escriba par(mar=c(4, 10, 4, 2)) en el indicador y presione INTRO."
  
- Class: text
  Output: "Le explico como funciona la cosa. En el sistema base de graficar, la 
  en que nos encontramos de momento, la función 'par' (para parÁMETROS) controla
  algunas adjustes importantes. El argumento 'mar' (para márgenes) tal vez es
  lo más útil entre ellos. Con este comando usted cambiara las margenes 
  desde sus valores por defect de (5, 4, 4, 2), el órden de los valores sigue el
  modelo que hubiera visto en la lección Anatomía de una gráfica (parte inferior,
  izquierda, parte superior, derecha). Con el último comando usted hubiera 
  quitado una unidad de la parte inferior, añadido 6 unidades a la izquierda 
  para acomodar las etiquetas, y dejado los demás en paz."
  
- Class: cmd_question
  Output: "Ahora usted puede recuperar la última llamada a barplot() y repetirla
  sin cambiar nada más que el argumento 'las' a las = 1. Ahora si, queremos que
  las etiquetas de ambos ejes sean horizontales."
  CorrectAnswer: barplot(resumen$hijos, names.arg = resumen$region, las=1, horiz = TRUE)
  AnswerTests: omnitest(correctExpr="barplot(resumen$hijos, names.arg = resumen$region, las=1, horiz = TRUE)")
  Hint: "Recuperar el código para el barplot y arregla todos los argumentos
  según este ejemplo barplot(resumen$hijos, names.arg = resumen$region, 
  las=1, horiz = TRUE)."

- Class: text
  Output: "Depende el tamaño de la pantalla que usted tiene, puede que todavía 
  se la vea apretada. Haga click en ZOOM para convencerse que no es nada 
  grave. Se puede arrastrar la ventanilla PLOTS para que ella tenga mas espacio,
  pero no lo hagas tanto que apretara a la consola."

- Class: mult_question
  Output: "La grafica ya esta mucho mejor, pero nos queda un problema muy común
  que afecta el poder de la gráfica contar su historia. Acuérdese a las gráficas
  de la última lección, ¿estuvo muy facil leer el rango de valores de ellas, 
  verdad? ¿Le parece más difícil ahora? ¿Cómo son ordenadas las provincias?"
  AnswerChoices: "alfabeticamente; aleatoriamente; geograficamente"
  CorrectAnswer: alfabeticamente
  AnswerTests: omnitest(correctVal="alfabeticamente")
  Hint: "No importa si usted empieza arriba o abajo, no se puede escapar la 
  conclusión que el órden sigue el alfabeto."

- Class: cmd_question
  Output: "Supongo que este orden podria ser util para ubicar rapidamente una 
  cierta provincia, pero compárelo con el efecto de ordenar las provincias por 
  el valor de la variable de respuesta, el número de hijos y hijas. Vamos
  a cambiar la llamada a la función barplot para controlar el órden, como sigue
  'with(resumen[order(resumen[,2]), ], barplot(hijos, names.arg = region, 
  horiz = TRUE, las=1))'. Hágalo, en seguida se lo explico a usted."
  CorrectAnswer: with(resumen[order(resumen[,2]), ], barplot(hijos, names.arg = region, horiz = TRUE, las=1))
  AnswerTests: omnitest(correctExpr="with(resumen[order(resumen[,2]), ], barplot(hijos, names.arg = region, horiz = TRUE, las=1))")
  Hint: "Escriba el código según las instrucciones para seguir, todas las comas y 
  corchetes son muy importantes."

- Class: text
  Output: "No sé como se siente usted, pero a mi me tranquilizó los ojos este 
  cambio, aunque todavía el producto podría ser mejorado. Ya se puede leer mejor
  las etiquetas y también el rango de valores.  Creo yo que podemos dejar esta
  gráfica acá, aunque le toca a usted añadir etiquetas y títulos para completar
  esta gráfica."
  
- Class: cmd_question
  Output: "Vamos a comparar una opción más antes de partir. Pero antes de eso, 
  quiero que vea el efecto del último comando que usted ha hecho en la gráfica 
  esta. Teclee este parte del comando solo resumen[order(resumen[,2]), ] y
  presione INTRO."
  CorrectAnswer: resumen[order(resumen[,2]), ]
  AnswerTests: omnitest(correctExpr="resumen[order(resumen[,2]), ]")
  Hint: "Teclee o pegar resumen[order(resumen[,2]), ] no más y presione INTRO."

- Class: cmd_question
  Output: "Este comando no es nada transparente ¿verdad?. Dice a R algo como... 
  con todo el objeto 'resumen', ordénelo por la segunda columna en sí. 
  Un comando equivalente, tal vez más de facil leer sería 
  'resumen[with(resumen, order(hijos)), ]'. En sí, ninguno de ellos afectará un
  cambio permanente a nuestro tramo de datos, sino una reconfiguración temporal
  de conveniencia. Para hacer la pŕoxima y final gráfica más sencilla realizar, 
  vamos a guardar una versión del tramo con este órden por número de hijos y 
  hijas. Solo hay que asignar el último comando su propio nombre, así
  resumenOrd <- resumen[with(resumen, order(hijos)), ]. Pruébelo, el resultado
  aparecerá en la ventanilla ENVIRONMENT."
  CorrectAnswer: resumenOrd <- resumen[with(resumen, order(hijos)), ]
  AnswerTests: omnitest(correctExpr= "resumenOrd <- resumen[with(resumen, order(hijos)), ]")
  Hint: "Escriba resumenOrd <- resumen[with(resumen, order(hijos)), ] y presione INTRO."

- Class: cmd_question
  Output: "Hemos guardado lo mejor para el fin. En el vídeo de principios en que
  le destaqué algunos heroes del campo de visualización de datos, mencioné 
  William Cleveland. Según los principios de la percepcion humana, el desarollo
  una alternativa a la digrama de barras la que lleva su nombre 'Cleveland Plot'.
  En R, con nuestro conjunto reordenado podemos realizarlo asi
  dotchart(x = resumenOrd$hijos, labels = resumenOrd$region). Pruebelo, puede
  que le quitara las ganas de hacer diagramas de barras para toda la vida."
  CorrectAnswer: dotchart(x = resumenOrd$hijos, labels = resumenOrd$region)
  AnswerTests: omnitest(correctExpr= "dotchart(x = resumenOrd$hijos, labels = resumenOrd$region)")
  Hint: "Teclee dotchart(x = resumenOrd$hijos, labels = resumenOrd$region) y
  presione INTRO, usted tendra que añadir las etiquetas luego, y solo."